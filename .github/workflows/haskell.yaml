name: Haskell CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  MailFromEmail : ${{ vars.MailFromEmail }}
  MailAPIToken : ${{ secrets.MailAPIToken }}
  GoogleOAuth2ClientID : ${{ secrets.GoogleOAuth2ClientID }}
  GoogleOAuth2ClientSecret : ${{ secrets.GoogleOAuth2ClientSecret }}
  HaskReadJwtSecret : ${{ secrets.HaskReadJwtSecret }}

jobs:
  build-ui:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: ./haskread-platform-ui/

    steps:
    
    - name: Copy repo into actions 
      uses: actions/checkout@v3
    
    - name: install dependancies, build and test stack project.
      uses: freckle/stack-action@v5
      with:
        working-directory: ./haskread-platform-ui/
        stack-build-arguments: --copy-bins --ghc-options="-fno-warn-unused-imports -fno-warn-unused-matches -fno-warn-type-defaults -fno-warn-missing-export-lists"
        stack-build-arguments-test: --ghc-options="-fno-warn-unused-imports -fno-warn-unused-matches -fno-warn-type-defaults -fno-warn-missing-export-lists"

    - name: upload ui binary
      uses: actions/upload-artifact@v4
      with:
          name: ui-binary
          path: /home/runner/.local/bin/haskread-platform-ui-exe

  build-be:
    environment: Test Env
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: ./haskread-platform-be/

    steps:
    
    - name: Copy repo into actions 
      uses: actions/checkout@v3
    
    - name: Start test database
      run: make startTestDB
    
    - name: install dependancies, build and test stack project.
      uses: freckle/stack-action@v5
      with:
        working-directory: ./haskread-platform-be/
        stack-build-arguments: --copy-bins --ghc-options="-fno-warn-unused-imports -fno-warn-unused-matches -fno-warn-type-defaults -fno-warn-missing-export-lists"
        stack-build-arguments-test: --ghc-options="-fno-warn-unused-imports -fno-warn-unused-matches -fno-warn-type-defaults -fno-warn-missing-export-lists"

    - name: upload be binary
      uses: actions/upload-artifact@v4
      with:
          name: be-binary
          path: /home/runner/.local/bin/haskread-platform-be-exe

    - name: stop test database
      run: make stopTestDB

  test-ui:
    needs: [build-ui, build-be]
    environment: Test Env
    runs-on: ubuntu-22.04
    env:
      MailFromEmail: ${{ vars.MailFromEmail }}
      MailAPIToken: ${{ secrets.MailAPIToken }}
      GoogleOAuth2ClientID: ${{ secrets.GoogleOAuth2ClientID }}
      GoogleOAuth2ClientSecret: ${{ secrets.GoogleOAuth2ClientSecret }}
      HaskReadJwtSecret: ${{ secrets.HaskReadJwtSecret }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Start test database
        run: |
          docker run \
                --name haskread_test_pg_db \
                -e POSTGRES_PASSWORD=1234 \
                -e POSTGRES_USER=tushar \
                -e POSTGRES_DB=haskread_test_db \
                -v ./haskread-platform-be/Scripts/DB/schema.sql:/docker-entrypoint-initdb.d/schema.sql \
                -p 5434:5432 \
                --rm -d \
                postgres:16.3-alpine3.20

      - name: Run backend
        run: |
          chmod +x ./artifacts/be-binary/haskread-platform-be-exe
          mkdir file-upload
          mkdir .logs
          touch ./.logs/dev_logs.txt
          ./artifacts/be-binary/haskread-platform-be-exe ./haskread-platform-be/testEnv.dhall &

      - name: Run frontend
        run: |
          chmod +x ./artifacts/ui-binary/haskread-platform-ui-exe
          ./artifacts/ui-binary/haskread-platform-ui-exe local &

      - name: Wait for frontend
        run: |
          until curl --output /dev/null --silent --head --fail http://localhost:3000; do
            printf '.'
            sleep 5
          done

      - name: Test UI
        run: |
          bash ./haskread-platform-ui/test_ui.sh

      - name: Stop test database
        if: always()
        run: docker stop haskread_test_pg_db